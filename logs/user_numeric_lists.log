2023-09-09 21:15:26,317 =============================================================
2023-09-09 21:15:26,317 =============================================================
2023-09-09 21:15:26,317 Today is 2023-09-09 at 09:15 PM
2023-09-09 21:15:26,384 This file is running on: nt Windows 10
2023-09-09 21:15:26,384 The Python version is: 3.11.4
2023-09-09 21:15:26,385 The active conda environment is:  None
2023-09-09 21:15:26,385 The active pip environment is:    None
2023-09-09 21:15:26,385 The active environment path is:   C:\Users\Admin\AppData\Local\Programs\Python\Python311
2023-09-09 21:15:26,385 The current working directory is: C:\Users\Admin\Documents\MS DATA Analytics\440608\Week 3\datafun-03-datatypes
2023-09-09 21:15:26,385 This source file is in:           c:\Users\Admin\Documents\MS DATA Analytics\440608\Week 3\datafun-03-datatypes
2023-09-09 21:15:26,385 =============================================================
2023-09-09 21:15:26,385 =============================================================
2023-09-09 21:15:26,385 Calling functions from main block
2023-09-09 21:15:26,385 score_list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-09 21:15:26,385 mean: 81.45
2023-09-09 21:15:26,388 median: 61.0
2023-09-09 21:15:26,388 mode: 11
2023-09-09 21:15:26,388 stdev: 87.15
2023-09-09 21:15:26,388 variance: 7594.68
2023-09-09 21:15:26,388 listx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
2023-09-09 21:15:26,388 listy: [1, 3, 5, 7, 8, 9, 11, 11, 15, 16]
2023-09-09 21:15:26,388 correlation between x and y: 0.99
2023-09-09 21:15:26,388 The equation of the best fit line is: y = 1.59x + 1.45
2023-09-09 21:15:26,388 We predict that when x = {newx}, y will be about {new_y}
2023-09-09 21:15:26,388 Given score list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-09 21:15:26,388 The max() is 307
2023-09-09 21:15:26,388 The min() is 1
2023-09-09 21:15:26,388 The len() is 20
2023-09-09 21:15:26,388 The sum() is 1629
2023-09-09 21:15:26,388 The average is 81.45
2023-09-09 21:15:26,388 Given score list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-09 21:15:26,388 Using the built-it function sorted(lst) gives: [1, 2, 10, 11, 11, 14, 23, 32, 56, 61, 61, 76, 77, 77, 87, 90, 167, 221, 245, 307]
2023-09-09 21:15:26,388 Using the built-in function sorted(lst,reverse=True) gives: [307, 245, 221, 167, 90, 87, 77, 77, 76, 61, 61, 56, 32, 23, 14, 11, 11, 10, 2, 1]
2023-09-09 21:15:26,388 new_numbers are: [27, 10, 9, 7, 6, 4, 3, 2, 1]
2023-09-09 21:15:26,388 Popped the first (index=0): 27 and now, new_numbers are: [10, 9, 7, 6, 4, 3, 2, 1]
2023-09-09 21:15:26,388 Popped the last (index=-1): 1 and now, new_numbers are: [10, 9, 7, 6, 4, 3, 2]
2023-09-09 21:15:26,388 Number list: {list1}
2023-09-09 21:15:26,388 Numbers under 50: [1, 2, 23, 11, 14, 10, 32, 11]
2023-09-09 21:15:26,388 Cubed numbers: [1.0, 1.2599210498948732, 2.8438669798515654, 2.2239800905693152, 2.4101422641752297, 4.235823584254893, 3.9364971831021727, 2.154434690031884, 3.1748021039363987, 3.825862365544778, 4.254320865115005, 4.254320865115005, 4.431047621693634, 5.506878446387352, 6.045943596012513, 6.257324745675973, 6.745996711705424, 2.2239800905693152, 3.9364971831021727, 4.481404746557164]
2023-09-09 21:15:26,388 Volume of list1: [1, 8, 12167, 1331, 2744, 438976, 226981, 1000, 32768, 175616, 456533, 456533, 658503, 4657463, 10793861, 14706125, 28934443, 1331, 226981, 729000]
2023-09-09 21:15:26,388 List1: {list1}
2023-09-09 21:15:26,388 Numbers over 50 (using list comprehensions!): {numbers_over_50}
2023-09-09 21:15:26,388 Tripled numbers are: {tripled_numbers}
2023-09-09 21:15:26,388 Add more logging statements to the code to see what happens.
2023-09-09 21:15:26,388 Explore enough to understand.
2023-09-09 21:15:26,388 Apply these skills to your own topic domain.
