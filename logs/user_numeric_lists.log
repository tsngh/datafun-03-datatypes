2023-09-10 09:55:57,374 =============================================================
2023-09-10 09:55:57,374 =============================================================
2023-09-10 09:55:57,374 Today is 2023-09-10 at 09:55 AM
2023-09-10 09:55:57,460 This file is running on: nt Windows 10
2023-09-10 09:55:57,461 The Python version is: 3.11.4
2023-09-10 09:55:57,461 The active conda environment is:  None
2023-09-10 09:55:57,461 The active pip environment is:    None
2023-09-10 09:55:57,461 The active environment path is:   C:\Users\Admin\AppData\Local\Programs\Python\Python311
2023-09-10 09:55:57,461 The current working directory is: C:\Users\Admin\Documents\MS DATA Analytics\440608\Week 3\datafun-03-datatypes
2023-09-10 09:55:57,461 This source file is in:           c:\Users\Admin\Documents\MS DATA Analytics\440608\Week 3\datafun-03-datatypes
2023-09-10 09:55:57,461 =============================================================
2023-09-10 09:55:57,461 =============================================================
2023-09-10 09:55:57,461 Calling functions from main block
2023-09-10 09:55:57,461 score_list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-10 09:55:57,464 mean: 81.45
2023-09-10 09:55:57,464 median: 61.0
2023-09-10 09:55:57,464 mode: 11
2023-09-10 09:55:57,466 stdev: 87.15
2023-09-10 09:55:57,466 variance: 7594.68
2023-09-10 09:55:57,466 listx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
2023-09-10 09:55:57,466 listy: [1, 3, 5, 7, 8, 9, 11, 11, 15, 16]
2023-09-10 09:55:57,466 correlation between x and y: 0.99
2023-09-10 09:55:57,466 The equation of the best fit line is: y = 1.59x + 1.45
2023-09-10 09:55:57,466 We predict that when x = {newx}, y will be about {new_y}
2023-09-10 09:55:57,466 Given score list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-10 09:55:57,467 The max() is 307
2023-09-10 09:55:57,467 The min() is 1
2023-09-10 09:55:57,467 The len() is 20
2023-09-10 09:55:57,467 The sum() is 1629
2023-09-10 09:55:57,467 The average is 81.45
2023-09-10 09:55:57,467 Given score list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-10 09:55:57,467 Using the built-it function sorted(lst) gives: [1, 2, 10, 11, 11, 14, 23, 32, 56, 61, 61, 76, 77, 77, 87, 90, 167, 221, 245, 307]
2023-09-10 09:55:57,467 Using the built-in function sorted(lst,reverse=True) gives: [307, 245, 221, 167, 90, 87, 77, 77, 76, 61, 61, 56, 32, 23, 14, 11, 11, 10, 2, 1]
2023-09-10 09:55:57,467 new_numbers are: [27, 10, 9, 7, 6, 4, 3, 2, 1]
2023-09-10 09:55:57,467 Popped the first (index=0): 27 and now, new_numbers are: [10, 9, 7, 6, 4, 3, 2, 1]
2023-09-10 09:55:57,467 Popped the last (index=-1): 1 and now, new_numbers are: [10, 9, 7, 6, 4, 3, 2]
2023-09-10 09:55:57,467 Number list: [1, 2, 23, 11, 14, 76, 61, 10, 32, 56, 77, 77, 87, 167, 221, 245, 307, 11, 61, 90]
2023-09-10 09:55:57,467 Numbers under 50: [1, 2, 23, 11, 14, 10, 32, 11]
